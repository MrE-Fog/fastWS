name: build

on:
  push:
    branches:
      - master

jobs:
  build:
    if: "!startsWith(github.event.head_commit.message, 'ci')"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '16'
    - name: Install
      run: yarn install --frozen-lockfile
    - name: Lint check
      run: yarn lint
    - name: Test
      run: yarn test

  release:
    needs: build
    if: "startsWith(github.event.head_commit.message, 'v')"
    runs-on: ubuntu-latest
    env:
      NPM_TOKEN: ${{secrets.npm_token}}
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-node@v2
      with:
        node-version: '16'
        registry-url: https://registry.npmjs.org/
    - name: Conventional Changelog Action
      id: changelog
      uses: TriPSs/conventional-changelog-action@v3
      with:
        git-message: 'ci(release): {version}'
        github-token: ${{ secrets.GITHUB_TOKEN }}
        create-summary: true
        preset: conventionalcommits
        version-file: ./lerna.json
        skip-version-file: true
    - name: Create Release
      uses: actions/create-release@v1
      if: ${{ steps.changelog.outputs.skipped == 'false' }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.changelog.outputs.tag }}
        release_name: ${{ steps.changelog.outputs.tag }}
        body: ${{ steps.changelog.outputs.clean_changelog }}
    - name: Publish to npm
      run: |
        echo '//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}' > .npmrc
        npm whoami
        yarn install --frozen-lockfile
        yarn publish-all --no-verify-access
