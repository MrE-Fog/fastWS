name: build

on: push

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - name: Setup Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'
    - name: correct msbuild path
      if: matrix.os == 'windows-latest'
      run: npm config set msbuild_path "C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\MSBuild\Current\Bin\MSBuild.exe"
    - name: Install
      run: yarn install
    - name: Lint check
      run: yarn lint
    - name: Build source
      run: yarn build
    - name: Test
      run: yarn test
    - name: Publish prebuild binary
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        npx lerna run prebuild-all
        npx prebuild --upload-all ${{secrets.GITHUB_TOKEN}}

  build_arm:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: recursive
      - uses: uraimo/run-on-arch-action@v1.0.5
        with:
          architecture: aarch64
          distribution: ubuntu18.04
          run: |
            apt-get update
            apt-get install -y curl build-essential
            curl -sL https://deb.nodesource.com/setup_14.x | bash -
            apt-get install -y nodejs
            export NODE_ENV=development
            yarn
            yarn lint
            yarn build
            yarn test
            [[ ${{ github.ref }} == refs/tags/* ]] && yarn prebuild-node || true
            [[ ${{ github.ref }} == refs/tags/* ]] && npx prebuild --upload-all "${{secrets.GITHUB_TOKEN}}" || true

  publish-npm:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: recursive
    - uses: actions/setup-node@v2
      with:
        node-version: '14'
        cache: 'npm'
        registry-url: https://registry.npmjs.org/
    - run: |
        yarn
        npx lerna publish
      env:
        NODE_AUTH_TOKEN: ${{secrets.npm_token}}
